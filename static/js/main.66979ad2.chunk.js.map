{"version":3,"sources":["frontend/Visualizer.jsx","frontend/App.js","index.js"],"names":["initialColor","Visualizer","useState","algo","setAlgo","hit","setHit","fault","setFault","hitRatio","setHitratio","mainButtonColor","setMainButtonColor","reset","setReset","queue","setQueue","framesArray","setFramesArray","findCol","A","col","i","useEffect","type","className","onClick","class","map","x","style","color","hhit","ffault","n","indexOf","length","unshift","pop","temp","push","removeReAdd","setColor","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66979ad2.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport './visualizer.css'\r\n\r\nconst initialColor='rgba(0, 0, 0, 0.144)'\r\n\r\n\r\n\r\n\r\n\r\nfunction Visualizer() {\r\n//--------------------------------------------------------------------------------------------> Variable States\r\n    const [algo,setAlgo]= useState('FIFO')\r\n\r\n    const[hit,setHit]=useState(0)\r\n    const[fault,setFault]=useState(0)\r\n    const[hitRatio,setHitratio]=useState('-')\r\n\r\n    const [mainButtonColor,setMainButtonColor]=useState(\"btn-primary\")\r\n    const[reset,setReset]=useState(false)\r\n\r\n    const buttonThemes=['red','yellow','lime','aqua','darkorange','magenta','chocolate']\r\n    const [queue,setQueue]=useState([])\r\n    const [framesArray,setFramesArray]=useState([initialColor,initialColor,initialColor,initialColor])    \r\n//--------------------------------------------------------------------------------------------X\r\n\r\n//--------------------------------------------------------------------------------------------> Changing algorithm\r\n    function changeAlgo(){\r\n        if (algo=='FIFO'){\r\n            setAlgo('LRU')\r\n            setMainButtonColor(\"btn-success\")\r\n        }\r\n        else{\r\n            setAlgo('FIFO')\r\n            setMainButtonColor(\"btn-primary\")\r\n        }\r\n    }\r\n\r\n    useEffect(() =>{\r\n            setFramesArray([initialColor,initialColor,initialColor,initialColor])\r\n            setHit(0)\r\n            setFault(0)\r\n            setHitratio('-')\r\n            setQueue([])\r\n    },[algo,reset])\r\n//--------------------------------------------------------------------------------------------X\r\n    \r\n\r\n\r\n//--------------------------------------------------------------------------------------------> Changing frames colors\r\n    function findCol(A,col){\r\n        for(let i=0;i<4;i++){\r\n            if (A[i]==col)\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    function removeReAdd(A,col){\r\n        let temp=[]\r\n        for(let i=0;i<A.length;i++){\r\n            if(A[i]!=col)\r\n                temp.push(A[i])\r\n        }\r\n        temp.unshift(col)\r\n        return temp\r\n    }\r\n\r\n    function setColor(color){\r\n        let hhit=hit,ffault=fault\r\n        if(algo === 'FIFO'){\r\n            if (findCol(framesArray,color)){\r\n                setHit(hit+1)\r\n                hhit+=1\r\n            }\r\n            else{\r\n                setFault(fault+1)\r\n                if(findCol(framesArray,initialColor)){\r\n                    let x=[...framesArray];\r\n                    let n= x.indexOf(initialColor);\r\n                    x[n]=color;\r\n                    setFramesArray(x);\r\n                }\r\n\r\n                else{\r\n                    let x=[...framesArray];\r\n                    let n= x.indexOf(queue[3]);\r\n                    x[n]=color;\r\n                    setFramesArray(x);\r\n                }\r\n                if(queue.length<4){\r\n                    let x=[...queue]\r\n                    x.unshift(color)\r\n                    setQueue(x)\r\n                }\r\n                else{\r\n                    let x=[...queue]\r\n                    x.unshift(color)\r\n                    x.pop()\r\n                    setQueue(x)\r\n                }\r\n              ffault+=1  \r\n            }\r\n        }\r\n        \r\n        else{\r\n            if (findCol(framesArray,color)){\r\n                setHit(hit+1)\r\n                let x=[...queue]\r\n                x=removeReAdd(x,color)\r\n                setQueue(x)\r\n                hhit+=1\r\n            }\r\n            else{\r\n                setFault(fault+1)\r\n                if(findCol(framesArray,initialColor)){\r\n                    let x=[...framesArray];\r\n                    let n= x.indexOf(initialColor);\r\n                    x[n]=color;\r\n                    setFramesArray(x);\r\n                }\r\n\r\n                else{\r\n                    let x=[...framesArray];\r\n                    let n= x.indexOf(queue[3]);\r\n                    x[n]=color;\r\n                    setFramesArray(x);\r\n                }\r\n                if(queue.length<4){\r\n                    let x=[...queue]\r\n                    x.unshift(color)\r\n                    setQueue(x)\r\n                }\r\n                else{\r\n                    let x=[...queue]\r\n                    x.unshift(color)\r\n                    x.pop()\r\n                    setQueue(x)\r\n                }\r\n              ffault+=1  \r\n            }\r\n        }\r\n\r\n        setHitratio(hhit/(hhit+ffault))\r\n    }\r\n//--------------------------------------------------------------------------------------------X\r\n\r\n\r\n    return (\r\n        <div>\r\n            {/*Algorithm Changing Button*/}\r\n            <br></br>\r\n            <button type=\"button\" className={\"algoButton btn w-100 \"+\" \"+ mainButtonColor} onClick={()=>changeAlgo()}>{algo} <i class=\"fas fa-repeat\"></i></button>\r\n            <br></br><br></br>\r\n\r\n            {/*Paint Buttons*/ }\r\n            <div className=\"buttonGrid\">\r\n                {buttonThemes.map(x=>{\r\n                    return(\r\n                        <button className={'btn paintButton'} style={{'background-color':x}}  onClick={()=>{setColor(x)}}><i class=\"fas fa-paint-brush\"></i></button>\r\n                    )\r\n                })}\r\n\r\n                <button type=\"button\" className={\"btn btn-danger redoButton\"} style={{'border-radius':'100%', 'border':'none'}} onClick={()=>{setReset(!reset)}}><i class=\"fad fa-sync\"></i></button>\r\n            </div>\r\n     \r\n            {/*Frames*/}\r\n            <div className=\"framesHolder\">\r\n                {framesArray.map(x=>{\r\n                    return(\r\n                        <div className=\"frame\" style={{'height':\"30vh\", \"width\":'17vw','background-color':x }}></div>\r\n                    )\r\n                })}\r\n\r\n            </div>\r\n\r\n            {/*Hits, Faults and Hit ratio*/}\r\n            <div className='writtenHolder'>\r\n                <div className='written'><h2>Hits: {hit}</h2></div>\r\n                <div className='written'><h2>Faults: {fault}</h2></div>\r\n            </div>\r\n            <div className='hitratio'><h2>Hit ratio: {hitRatio}</h2></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Visualizer\r\n","import React from 'react'\r\nimport './index.css'\r\nimport Visualizer from './Visualizer.jsx'\r\nfunction App() {    \r\n     return (\r\n        <>\r\n        <h1 className=\"title\">Page Replacement Algorithm Visualizer</h1>\r\n        <Visualizer></Visualizer>\r\n        </>\r\n\r\n        )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport $ from 'jquery'\r\nimport \"./frontend/index.css\"\r\nimport App from './frontend/App'\r\n\r\n\r\nReactDOM.render(<App></App>,document.getElementById('root'))\r\nif (module.hot) {\r\n    module.hot.accept();\r\n}\r\n\r\n"],"sourceRoot":""}